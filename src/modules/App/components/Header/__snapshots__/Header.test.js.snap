// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header Renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <div>
          <h1
            className=""
          >
            <Link
              replace={false}
              to="/"
            >
              Student Comparator
            </Link>
          </h1>
          <div
            className=""
          >
            <Link
              replace={false}
              to="/Students"
            />
          </div>
        </div>
      </div>,
      "className": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <h1
            className=""
          >
            <Link
              replace={false}
              to="/"
            >
              Student Comparator
            </Link>
          </h1>
          <div
            className=""
          >
            <Link
              replace={false}
              to="/Students"
            />
          </div>
        </div>,
        "className": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1
              className=""
            >
              <Link
                replace={false}
                to="/"
              >
                Student Comparator
              </Link>
            </h1>,
            <div
              className=""
            >
              <Link
                replace={false}
                to="/Students"
              />
            </div>,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                replace={false}
                to="/"
              >
                Student Comparator
              </Link>,
              "className": "",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Student Comparator",
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": "Student Comparator",
              "type": [Function],
            },
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                replace={false}
                to="/Students"
              />,
              "className": "",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "replace": false,
                "to": "/Students",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "nav",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <div>
            <h1
              className=""
            >
              <Link
                replace={false}
                to="/"
              >
                Student Comparator
              </Link>
            </h1>
            <div
              className=""
            >
              <Link
                replace={false}
                to="/Students"
              />
            </div>
          </div>
        </div>,
        "className": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div>
            <h1
              className=""
            >
              <Link
                replace={false}
                to="/"
              >
                Student Comparator
              </Link>
            </h1>
            <div
              className=""
            >
              <Link
                replace={false}
                to="/Students"
              />
            </div>
          </div>,
          "className": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1
                className=""
              >
                <Link
                  replace={false}
                  to="/"
                >
                  Student Comparator
                </Link>
              </h1>,
              <div
                className=""
              >
                <Link
                  replace={false}
                  to="/Students"
                />
              </div>,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Link
                  replace={false}
                  to="/"
                >
                  Student Comparator
                </Link>,
                "className": "",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Student Comparator",
                  "replace": false,
                  "to": "/",
                },
                "ref": null,
                "rendered": "Student Comparator",
                "type": [Function],
              },
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Link
                  replace={false}
                  to="/Students"
                />,
                "className": "",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "replace": false,
                  "to": "/Students",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "nav",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
